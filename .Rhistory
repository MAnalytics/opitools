img7 <- img
}
if(m == 8){
img8 <- img
}
if(m == 9){
img9 <- img
}
if(m == 10){
img10 <- img
}
if(m == 11){
img11 <- img
}
if(m == 12){
img12 <- img
}
if(m == 13){
img13 <- img
}
if(m == 14){
img14 <- img
}
if(m == 15){
img15 <- img
}
if(m == 16){
img16 <- img
}
if(m == 17){
img17 <- img
}
if(m == 18){
img18 <- img
}
if(m == 19){
img19 <- img
}
if(m == 20){
img20 <- img
}
images <- list(img1=img1, img2=img2, img3=img3,
img4=img4, img5=img5, img6=img6,
img7=img7, img8=img8,img9=img9,img10=img10,
img11=img11,img12=img12,img13=img13,
img14=img14,img15=img15,img16=img16,
img17=img17,img18=img18,img19=img19,
img20=img20)
images <- images[which(images != "NULL")]
tfidf_plot <- plot_grid(plotlist=images, ncol = 2)
}
}
if(metric == "tf"){
mtr <- "term frequency"
}
if(metric == "tf-idf"){
mtr <- "term frequency-inverse document frequency"
}
if(metric == "tf"){
table <- as_tibble(tf)
}
if(metric == "tf-idf"){
table <- tf_idf
}
if(metric == "tf"){
plt <- tf_plot
}
if(metric == "tf-idf"){
plt <- tfidf_plot
}
output <- list(metric = mtr,
table = table,
plot = plt)
output
library(opitools)
output <- word_importance(textdoc = policing_dtd, metric= "tf",
n_top=5, words_to_filter
)
output
output$plot
wf <- c("police","policing")
output <- word_importance(textdoc = policing_dtd, metric= "tf",
n_top=5, words_to_filter= wf)
output
reviews_dtd
output2 <- word_importance(textdoc = reviews_dtd, metric= "tf", n_top=5,
words_to_filter=NULL)
output2
output2$plot
output2 <- word_importance(textdoc = reviews_dtd, metric= "tf", n_top=5,
words_to_filter=c("station"))
output2$plot
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
output2 <- word_importance(textdoc = reviews_dtd, metric= "tf", n_top=5,
words_to_filter=c("station", "manchester","train"))
output2 <- word_importance(textdoc = reviews_dtd, metric= "tf", n_top=5,
words_to_filter=c("station", "manchester","train"))
output2$plot
library(cowplot)
p1 <- word_importance(textdoc = policing_dtd, metric= "tf", n_top=5,
words_to_filter=c("police","policing"))
p2 <- word_importance(textdoc = reviews_dtd, metric= "tf", n_top=5,
words_to_filter=c("station", "manchester","train"))
plot_grid(p1, p2, labels = "AUTO")
plot_grid(p1, p2, labels = "AUTO")
plot_grid(p1$plot, p2$plot, labels = "AUTO")
plot_grid(p1$plot, p2$plot, labels = "AUTO")
library(opitools)
p1$plot
p2$plot
facility_keys
signage_keys
opi_impact(textdoc = reviews_dtd,
sec_keywords=facility_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
opi_impact(textdoc = reviews_dtd,
sec_keywords=signage_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
keys <- data.frame(keys=c("shops","restaurant", "food", "coffee", "drink"))
keys
refreshment_keys <- data.frame(keys = c("restaurant", "shops", "food", "coffee", "drink"))
opi_impact(textdoc = reviews_dtd,
sec_keywords=refreshment_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
save(refreshment_keys, file = "refreshment_keys.rda")
covid_keys
data("policing_dtd")
data(policing_dtd)
# Load theme keywords
data(covid_keys)
opi_impact(policing_dtd, sec_keywords=covid_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
output1 <- opi_impact(policing_dtd, sec_keywords=covid_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
output1
output1$plot
output2 <- opi_impact(reviews_dtd, sec_keywords=refreshment_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
print(output2)
signage_keys
output3 <- opi_impact(reviews_dtd, sec_keywords=signage_keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
print(output3)
keys <- c("Hillary")
mode(keys)
dim(keys)
keys <- c("Hillary", "Trump")
dim(keys)
length(keys)
data.frame(keys)
sec_keywords=NULL
sec_keywords!="NULL"
sec_keywords=NULL
sec_keywords!=NULL
sec_keywords==NULL
is.null(sec_keywords)
getwd()
From the  `wordcloud` (i.e. `r fig$ref("figs2")`), the size of the words represent their respective frequencies (importance) across the document. Keywords relating to the COVID-19 pandemic are circled in red. In similar fashion, a user can identify keywords that relate to several other subjects that may have impacted neighbourhood policing during the data period. A list of `COVID-19 pandemic` related keywords are supplied with the `opitools` package. They can be assessed by typing:
dat <- read.table(file="youtb comments.csv", sep=",", head=TRUE)
From the  `wordcloud` (i.e. `r fig$ref("figs2")`), the size of the words represent their respective frequencies (importance) across the document. Keywords relating to the COVID-19 pandemic are circled in red. In similar fashion, a user can identify keywords that relate to several other subjects that may have impacted neighbourhood policing during the data period. A list of `COVID-19 pandemic` related keywords are supplied with the `opitools` package. They can be assessed by typing:
dat <- read.csv2(file="youtb comments.csv", sep=",", head=TRUE)
From the  `wordcloud` (i.e. `r fig$ref("figs2")`), the size of the words represent their respective frequencies (importance) across the document. Keywords relating to the COVID-19 pandemic are circled in red. In similar fashion, a user can identify keywords that relate to several other subjects that may have impacted neighbourhood policing during the data period. A list of `COVID-19 pandemic` related keywords are supplied with the `opitools` package. They can be assessed by typing:
dat <- read.csv2(file="youtb comments_1.csv", sep=",", head=TRUE)
head(dat)
dat$Date
head(dat_)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19))
head(dat_)
nrow(dat)
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.Date(paste(day, time, sep = "")))
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.Date(paste(day, time, sep = " ")))
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = paste(day, time, sep = " ")))
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = paste(day, time, sep = " "))
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = date.time(paste(day, time, sep = " ")))
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " "))+1)%>%
as.POSIXct(x,tz=Sys.timezone())
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " "))+1)
head(dat_)
min(dat_$datetime)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")
head(dat_)
nrow(dat_)
max(dat_$datetime)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(clin = ifelse(str_detect(Text, "Clinton"), "YES", "NO"))
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
remove.packages(c("dplyr", "tidyverse"))
install.packages('tidyverse', dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages('dplyr', dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
install.packages("tidyverse")
install.packages("dplyr")
library(tidyverse)
remove.packages(c("ellipsis"))
install.packages("ellipsis")
library(tidyverse)
install.packages("ellipsis")
library(tidyverse)
update.packages ()
library(tidyverse)
library(tidyverse)
From the  `wordcloud` (i.e. `r fig$ref("figs2")`), the size of the words represent their respective frequencies (importance) across the document. Keywords relating to the COVID-19 pandemic are circled in red. In similar fashion, a user can identify keywords that relate to several other subjects that may have impacted neighbourhood policing during the data period. A list of `COVID-19 pandemic` related keywords are supplied with the `opitools` package. They can be assessed by typing:
dat <- read.csv2(file="youtb comments_1.csv", sep=",", head=TRUE)
head(dat)
nrow(dat)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(clin = ifelse(str_detect(Text, "Clinton"), "YES", "NO"))
head(dat_)
nrow(dat_)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(clin = ifelse(str_detect(Text, "Donald"), "YES", "NO"))
head(dat_)
dat_ <- dat %>%
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(clin = ifelse(str_detect(Text, "Trump"), "YES", "NO"))
head(dat_)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(clin = ifelse(str_detect(Text, "Trump"), "YES", "NO"))
head(dat_)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))
head(dat_)
nrow(dat_)
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO"))
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
head(dat_)
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO"))# %>%
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter(DonaldTrump == "YES" & HillaryClinton == "YES")
head(dat_)
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO"))
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO"))
head(dat_)
dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO"))
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO")) %>%
dplyr::select(Text)
head(dat_$)
head(dat_)
nrow(dat_)
tweets
install.packages("htmltools")
install.packages("htmltools")
load(file=".\data\tweets.rda")
load(file="./data/tweets.rda")
tweets
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO")) %>%
dplyr::arrange(datetime)#%>%
dplyr::select(Text)%>%
#sample_n(5)
head(dat_)
head(dat_)
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO")) %>%
dplyr::arrange(datetime)%>%
dplyr::select(Text)%>%
#sample_n(5)
head(dat_)
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO")) %>%
dplyr::arrange(datetime)%>%
dplyr::select(Text)%>%
#sample_n(5)
head(dat_)
#J
dat_ <- dat %>%
mutate(day = substr(Date, 1, 10)) %>%
mutate(time = substr(Date, 12, 19)) %>%
mutate(datetime = as.POSIXct(paste(day, time, sep = " ")))%>%
filter(datetime >= "2016-09-27 01:17:46 BST" & datetime <= "2016-09-28 01:17:46 BST")%>%#just one day data
mutate(Hillary = ifelse(str_detect(Text, "Hillary"), "YES", "NO")) %>%
mutate(Clinton = ifelse(str_detect(Text, "Clinton"), "YES", "NO")) %>%
mutate(Donald = ifelse(str_detect(Text, "Donald"), "YES", "NO")) %>%
mutate(Trump = ifelse(str_detect(Text, "Trump"), "YES", "NO"))%>%
mutate(DonaldTrump = if_else(Donald == "YES" | Trump == "YES", "YES", "NO")) %>%
mutate(HillaryClinton = if_else(Hillary == "YES" | Clinton == "YES", "YES", "NO")) %>%
filter((DonaldTrump == "YES" & HillaryClinton == "NO") | (DonaldTrump == "NO" & HillaryClinton == "YES") | (DonaldTrump == "NO" & HillaryClinton == "NO")) %>%
dplyr::arrange(datetime)%>%
dplyr::select(Text) #%>%
debate_dtd <- dat_[1:1500,]
save(debate_dtd, file = "debate_dtd.rda")
getwd()
install.packages("htmltools")
install.packages("htmltools")
library(opitools)
p3 <- word_importance(textdoc = debate_dtd, metric= "tf", n_top=5,
words_to_filter=c("station", "manchester","train"))
p3 <- word_importance(textdoc = debate_dtd, metric= "tf", n_top=5,
words_to_filter=NULL)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
debate_dtd
dim(debate_dtd)
dim(reviews_dtd)
debate_dtd <- data.frame(text=dat_[1:1500,])
dim(debate_dtd)
save(debate_dtd, file = "debate_dtd.rda")
library(opitools)
p3 <- word_importance(textdoc = debate_dtd, metric= "tf", n_top=5,
words_to_filter=NULL)
p3
output4 <- opi_impact(debate_dtd, sec_keywords=keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
keys <- c("Clinton", "Hillary")
output4 <- opi_impact(debate_dtd, sec_keywords=keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
library(opitools)
output4 <- opi_impact(debate_dtd, sec_keywords=keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
output4
keys <- c("Donald", "Trump")
output5 <- opi_impact(debate_dtd, sec_keywords=keys, metric = 1,
fun = NULL, nsim = 99, alternative="two.sided",
quiet=TRUE)
print(output5)
